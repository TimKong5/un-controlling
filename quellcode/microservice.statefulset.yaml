apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}
    version: {{ .Values.microservice.version }}
spec:
  serviceName: {{ .Release.Name }}-svc
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      version: {{ .Values.microservice.version }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        version: {{ .Values.microservice.version }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.microserviceimage.pullSecret }}
      serviceAccountName: {{ include "helmchart.serviceAccountName" . }}
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.microserviceimage.repository }}:{{ .Values.microserviceimage.tag }}"
          imagePullPolicy: {{ .Values.microserviceimage.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-configmap
            - secretRef:
                name: microservice-credentials
            - secretRef:
                  name: vault-token
          securityContext:
            privileged: true
          ports:
            - containerPort: {{ .Values.microservice.port }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.microservice.port }}
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 2
            successThreshold: 1

          livenessProbe:
            tcpSocket:
              port: {{ .Values.microservice.port }}
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 2
            successThreshold: 1
          resources:
            requests:
              memory: "1G"
              cpu: "1"
            limits:
              memory: "1G"
              cpu: "1"
